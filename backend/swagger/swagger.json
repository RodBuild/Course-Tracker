{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Course Tracker API",
        "description": "API to retrieve data for the Course Tracker Web App."
    },
    "host": "course-tracker-byu.herokuapp.com",
    "basePath": "",
    "tags": [{
            "name": "Schools",
            "description": "This sections contains all the available requests for the school data"
        },
        {
            "name": "Courses",
            "description": "This sections contains all the available requests for the courses data"
        },
        {
            "name": "Reviews",
            "description": "This sections contains all the available requests for the reviews data"
        },
        {
            "name": "Users",
            "description": "This sections contains all the available requests for the users data"
        },
        {
            "name": "Admin",
            "description": "This sections would give special requests to users that are admins."
        }
    ],
    "schemes": [
        "https"
    ],
    "securityDefinitions": {},
    "paths": {
        "/schools/": {
            "get": {
                "tags": ["Schools"],
                "summary": "Get all available schools",
                "description": "Get request to the database; returns all available schools.\nLogged in: No\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": ["Schools"],
                "summary": "Request to add a new school",
                "description": "Post request to the database; create a new school.\nLogged in: Yes\nAdmin: Yes",
                "parameters": [{
                    "description": "The following JSON body is an example for the correct way of posting a new school",
                    "required": "true",
                    "name": "body",
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "example": "Brigham Young University - California"
                            },
                            "city": {
                                "example": "Clearlake"
                            },
                            "state": {
                                "example": "California"
                            },
                            "description": {
                                "example": "This is an example description...."
                            }
                        }
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "412": {
                        "description": "Precondition Failed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/schools/{id}": {
            "get": {
                "tags": ["Schools"],
                "summary": "Get school by id",
                "description": "Get request to the database; returns a single school, if found.\nLogged in: No\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "description": "Pass a valid ID",
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": ["Schools"],
                "summary": "Update a school by id",
                "description": "Put request to the database; updates a single school, if found.\nLogged in: Yes\nAdmin: Yes",
                "parameters": [{
                        "description": "Pass a valid ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "example": "Brigham Young University - California"
                                },
                                "city": {
                                    "example": "Clearlake"
                                },
                                "state": {
                                    "example": "California"
                                },
                                "description": {
                                    "example": "This is an example description...."
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "412": {
                        "description": "Precondition Failed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": ["Schools"],
                "summary": "Remove a school by id",
                "description": "Delete request to the database; removes a single school, if found.\nLogged in: Yes\nAdmin: Yes",
                "parameters": [{
                    "description": "Pass a valid ID",
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "412": {
                        "description": "Precondition Failed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/": {
            "get": {
                "tags": ["Users"],
                "summary": "Get data of currently logged in user",
                "description": "Get request to the database; returns data of logged in user. If no data found, use post request.\nLogged in: Yes\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": ["Users"],
                "summary": "Create data for currently logged in user",
                "description": "Post request to the database; creates data for logged in user.\nLogged in: Yes\nAdmin: No",
                "parameters": [{
                    "description": "The following JSON body is an example for the correct way of posting a user data",
                    "name": "body",
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "fname": {
                                "example": "John"
                            },
                            "lname": {
                                "example": "Doe"
                            },
                            "major": {
                                "example": "Computer Science"
                            },
                            "school": {
                                "example": "Brigham Young University"
                            },
                            "school_id": {
                                "example": "\"1234567890\""
                            }
                        }
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "412": {
                        "description": "Precondition Failed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": ["Users"],
                "summary": "Update data for currently logged in user",
                "description": "Put request to the database; updates data for logged in user.\nLogged in: Yes\nAdmin: No",
                "parameters": [{
                    "description": "The following JSON body is an example for the correct way of posting a user data",
                    "name": "body",
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "fname": {
                                "example": "John"
                            },
                            "lname": {
                                "example": "Doe"
                            },
                            "major": {
                                "example": "Computer Science"
                            },
                            "school": {
                                "example": "Brigham Young University"
                            },
                            "school_id": {
                                "example": "\"1234567890\""
                            }
                        }
                    }
                }],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "412": {
                        "description": "Precondition Failed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/{email}": {
            "get": {
                "tags": ["Users"],
                "summary": "Get data from other user by email",
                "description": "Get request to the database; retrieves data from another user.\nLogged in: Yes\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "description": "Pass a valid email format",
                    "name": "email",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/{id}": {
            "delete": {
                "tags": ["Users"],
                "summary": "Remove user data by id",
                "description": "Delete request to the database; removes data from a specific user.\nLogged in: Yes\nAdmin: Yes",
                "parameters": [{
                    "description": "Pass a valid ID",
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/courses/valid": {
            "get": {
                "tags": ["Courses"],
                "summary": "Get all valid courses",
                "description": "Get request to the database; returns all verified courses.\nLogged in: No\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/courses/valid/{id}": {
            "get": {
                "tags": ["Courses"],
                "summary": "Get a valid course by id",
                "description": "Get request to the database; returns a verified course.\nLogged in: No\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "description": "Pass a valid ID",
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/courses/valid/code/{code}": {
            "get": {
                "tags": ["Courses"],
                "summary": "Get all valid courses by course code",
                "description": "Get request to the database; returns verified courses.\nLogged in: No\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "description": "Course codes are capitalized",
                    "name": "code",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/courses/valid/school/{school}": {
            "get": {
                "tags": ["Courses"],
                "summary": "Get all valid courses by school name",
                "description": "Get request to the database; returns verified courses.\nLogged in: No\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "description": "The following are the available schools. Case sensitive",
                    "name": "school",
                    "in": "path",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["Brigham Young University", "Brigham Young University - Idaho", "Brigham Young University - Hawaii"],
                        "default": "Brigham Young University"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/courses/valid/department/{department}": {
            "get": {
                "tags": ["Courses"],
                "summary": "Get all valid courses by department name",
                "description": "Get request to the database; returns verified courses.\nLogged in: No\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "description": "Few examples of available departments. Case sensitive",
                    "name": "department",
                    "in": "path",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["Computer Science", "Biology", "Accountancy", "Art"],
                        "default": "Computer Science"
                    },
                    "collectionFormat": "multi"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/courses/invalid": {
            "get": {
                "tags": ["Courses"],
                "summary": "Get all invalid courses",
                "description": "Get request to the database; returns unverified courses.\nLogged in: No\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/courses/invalid/code/{code}": {
            "get": {
                "tags": ["Courses"],
                "summary": "Get all invalid courses by course code",
                "description": "Get request to the database; returns unverified courses.\nLogged in: No\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "description": "Course codes are capitalized",
                    "name": "code",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/courses/invalid/{email}": {
            "get": {
                "tags": ["Courses"],
                "summary": "Get all invalid courses by author's email",
                "description": "Get request to the database; returns unverified courses.\nLogged in: No\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "description": "Pass a valid email format",
                    "name": "email",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/courses/invalid/user": {
            "get": {
                "tags": ["Courses"],
                "summary": "Get all invalid courses created by currently logged in user",
                "description": "Get request to the database; returns unverified courses.\nLogged in: Yes\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": ["Courses"],
                "summary": "Currently logged in user creates an unverified course",
                "description": "Post request to the database; creates an unverified course.\nLogged in: Yes\nAdmin: No",
                "parameters": [{
                    "description": "The following JSON body is an example for the correct way of posting a new course",
                    "name": "body",
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "code": {
                                "example": "WDD330"
                            },
                            "department": {
                                "example": "Computer Science"
                            },
                            "name": {
                                "example": "Web Fronted Development II"
                            },
                            "description": {
                                "example": "This is an example description...."
                            },
                            "credits": {
                                "example": "\"3\""
                            },
                            "school": {
                                "example": "Brigham Young University - Idaho"
                            }
                        }
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "412": {
                        "description": "Precondition Failed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/courses/valid/admin": {
            "post": {
                "tags": ["Courses"],
                "summary": "Currently logged in user (Admin) creates a verified course",
                "description": "Post request to the database; creates a verified course.\nLogged in: Yes\nAdmin: Yes",
                "parameters": [{
                    "description": "The following JSON body is an example for the correct way of posting a new course",
                    "name": "body",
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "code": {
                                "example": "WDD330"
                            },
                            "department": {
                                "example": "Computer Science"
                            },
                            "name": {
                                "example": "Web Fronted Development II"
                            },
                            "description": {
                                "example": "This is an example description...."
                            },
                            "credits": {
                                "example": "\"3\""
                            },
                            "school": {
                                "example": "Brigham Young University - Idaho"
                            }
                        }
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "412": {
                        "description": "Precondition Failed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/courses/valid/admin/{code}": {
            "put": {
                "tags": ["Courses"],
                "summary": "Currently logged in user (Admin) updates a verified course",
                "description": "Update request to the database; modifies a verified course.\nLogged in: Yes\nAdmin: Yes",
                "parameters": [{
                        "description": "Course codes are capitalized\nThe following JSON body is an example for the correct way of posting a new course",
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "example": "WDD330"
                                },
                                "department": {
                                    "example": "Computer Science"
                                },
                                "name": {
                                    "example": "Web Fronted Development II"
                                },
                                "description": {
                                    "example": "This is an example description...."
                                },
                                "credits": {
                                    "example": "\"3\""
                                },
                                "school": {
                                    "example": "Brigham Young University - Idaho"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "412": {
                        "description": "Precondition Failed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": ["Courses"],
                "summary": "Currently logged in user (Admin) deletes a verified course",
                "description": "Delete request to the database; removes a verified course.\nLogged in: Yes\nAdmin: Yes",
                "parameters": [{
                    "description": "Course codes are capitalized",
                    "name": "code",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/courses/invalid/user/{code}": {
            "put": {
                "tags": ["Courses"],
                "summary": "Currently logged in user updates one of its unverified courses",
                "description": "Update request to the database; modifies an unverified course.\nLogged in: Yes\nAdmin: No",
                "parameters": [{
                        "description": "Course codes are capitalized\nThe following JSON body is an example for the correct way of posting a new course",
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "example": "WDD330"
                                },
                                "department": {
                                    "example": "Computer Science"
                                },
                                "name": {
                                    "example": "Web Fronted Development II"
                                },
                                "description": {
                                    "example": "This is an example description...."
                                },
                                "credits": {
                                    "example": "\"3\""
                                },
                                "school": {
                                    "example": "Brigham Young University - Idaho"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "412": {
                        "description": "Precondition Failed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": ["Courses"],
                "summary": "Currently logged in user deletes one of its unverified courses",
                "description": "Delete request to the database; removes an unverified course.\nLogged in: Yes\nAdmin: No",
                "parameters": [{
                    "description": "Course codes are capitalized",
                    "name": "code",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/admin/invalid-users": {
            "get": {
                "tags": ["Admin"],
                "summary": "Get all invalid users",
                "description": "Get request to the database; returns unverified users.\nLogged in: Yes\nAdmin: Yes",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/admin/valid-users": {
            "get": {
                "tags": ["Admin"],
                "summary": "Get all valid users",
                "description": "Get request to the database; returns verified users.\nLogged in: Yes\nAdmin: Yes",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/admin/verify-user/{email}": {
            "put": {
                "tags": ["Admin"],
                "summary": "Verify a single user",
                "description": "Put request to the database; update user data to make it be verified.\nLogged in: Yes\nAdmin: Yes",
                "parameters": [{
                    "description": "Pass a valid email format",
                    "name": "email",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/admin/verify-review/{id}": {
            "put": {
                "tags": ["Admin"],
                "summary": "Verify a single review",
                "description": "Put request to the database; update review data to make it be verified.\nLogged in: Yes\nAdmin: Yes",
                "parameters": [{
                    "description": "Pass a valid ID",
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/admin/delete-review/{id}": {
            "delete": {
                "tags": ["Admin"],
                "summary": "Delete a single review by its id",
                "description": "Delete request to the database; removes a course review.\nLogged in: Yes\nAdmin: Yes",
                "parameters": [{
                    "description": "Pass a valid ID",
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/admin/verify-course/{id}": {
            "post": {
                "tags": ["Admin"],
                "summary": "Verify a single user created course",
                "description": "Post request to the database; use ID to get data from unverified course; if course already exists, unverified course gets deleted; else, course gets added to the verified courses collection and removed from the unverified courses collection.\nLogged in: Yes\nAdmin: Yes",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "description": "Pass a valid ID",
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/admin/ban-user/{email}": {
            "post": {
                "tags": ["Admin"],
                "summary": "Ban a single user by its email",
                "description": "Post request to the database; deletes all data related to the users and adds it to a blocklist.\nLogged in: Yes\nAdmin: Yes",
                "parameters": [{
                        "description": "Pass a valid email format",
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "reason": {
                                    "example": "any"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/reviews/valid": {
            "get": {
                "tags": ["Reviews"],
                "summary": "Get all valid reviews",
                "description": "Get request to the database; returns verified reviews.\nLogged in: No\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/reviews/invalid": {
            "get": {
                "tags": ["Reviews"],
                "summary": "Get all invalid reviews",
                "description": "Get request to the database; returns unverified reviews.\nLogged in: No\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/reviews/user-valid": {
            "get": {
                "tags": ["Reviews"],
                "summary": "Get all user's valid reviews",
                "description": "Get request to the database; returns currently logged in user's verified reviews.\nLogged in: Yes\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/reviews/user-invalid": {
            "get": {
                "tags": ["Reviews"],
                "summary": "Get all user's invalid reviews",
                "description": "Get request to the database; returns currently logged in user's unverified reviews.\nLogged in: Yes\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/reviews/code/{code}": {
            "get": {
                "tags": ["Reviews"],
                "summary": "Get all reviews under a course code",
                "description": "Get request to the database; returns all reviews that match a course code.\nLogged in: No\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "description": "Course codes are capitalized",
                    "name": "code",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/reviews/email/{email}": {
            "get": {
                "tags": ["Reviews"],
                "summary": "Get all reviews created by another user, takes and email",
                "description": "Get request to the database; returns all reviews created by a user with the specified email.\nLogged in: No\nAdmin: No",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "description": "Pass a valid email format",
                    "name": "email",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/reviews/new-review/": {
            "post": {
                "tags": ["Reviews"],
                "summary": "Create a new unverified review",
                "description": "Post request to the database; creates a new entry for a course review.\nLogged in: Yes\nAdmin: No",
                "parameters": [{
                    "description": "The following JSON body is an example for the correct way of posting a new review. Notice the tags is an array, and it SHOULD NOT contain more than THREE elements. Grade can be a float.",
                    "name": "body",
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "code": {
                                "example": "WDD330"
                            },
                            "school": {
                                "example": "Brigham Young University - Idaho"
                            },
                            "grade": {
                                "example": "\"95\""
                            },
                            "tags": {
                                "example": ["Helpful", "Challenging", "Amazing content"]
                            },
                            "review": {
                                "example": "This is an example review...."
                            }
                        }
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "412": {
                        "description": "Precondition Failed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/reviews/update-review/{code}": {
            "put": {
                "tags": ["Reviews"],
                "summary": "Update a user's review by its code",
                "description": "Put request to the database; update the contents of user's review.\nLogged in: Yes\nAdmin: No",
                "parameters": [{
                        "description": "Course codes are capitalized",
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "example": "WDD330"
                                },
                                "school": {
                                    "example": "Brigham Young University - Idaho"
                                },
                                "grade": {
                                    "example": "\"95\""
                                },
                                "tags": {
                                    "example": ["Helpful", "Challenging", "Amazing content"]
                                },
                                "review": {
                                    "example": "This is an example review...."
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/reviews/delete-review/{code}": {
            "delete": {
                "tags": ["Reviews"],
                "summary": "Delete a user's review by its code",
                "description": "Delete request to the database; remove a single user's review.\nLogged in: Yes\nAdmin: No",
                "parameters": [{
                    "description": "Course codes are capitalized",
                    "name": "code",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    }
}